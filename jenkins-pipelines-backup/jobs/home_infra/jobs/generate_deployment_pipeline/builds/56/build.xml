<?xml version='1.1' encoding='UTF-8'?>
<flow-build plugin="workflow-job@1508.v9cb_c3a_a_89dfd">
  <actions>
    <hudson.model.CauseAction>
      <causeBag class="linked-hash-map">
        <entry>
          <hudson.model.Cause_-UserIdCause>
            <userId>kobeeq</userId>
          </hudson.model.Cause_-UserIdCause>
          <int>1</int>
        </entry>
      </causeBag>
    </hudson.model.CauseAction>
    <jenkins.metrics.impl.TimeInQueueAction plugin="metrics@4.2.21-464.vc9fa_a_0d6265d">
      <queuingDurationMillis>5</queuingDurationMillis>
      <blockedDurationMillis>0</blockedDurationMillis>
      <buildableDurationMillis>0</buildableDurationMillis>
      <waitingDurationMillis>3</waitingDurationMillis>
    </jenkins.metrics.impl.TimeInQueueAction>
    <org.jenkinsci.plugins.workflow.libs.LibrariesAction plugin="pipeline-groovy-lib@752.vdddedf804e72">
      <libraries/>
    </org.jenkinsci.plugins.workflow.libs.LibrariesAction>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.ExecutionModelAction plugin="pipeline-model-definition@2.2254.v2a_978de46f35">
      <stagesUUID>adda434c-3f06-4389-aa84-ffdfa8d52b56</stagesUUID>
      <pipelineDefs>
        <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTPipelineDef plugin="pipeline-model-api@2.2254.v2a_978de46f35">
          <stages>
            <stages>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                <name>Checkout Repository</name>
                <branches>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                    <name>default</name>
                    <steps>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                        <name>echo</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map">
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>message</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">üì• Checking out repository...</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                          </arguments>
                        </args>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                        <name>checkout</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map">
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>scm</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-GStringValue>
                                <value class="string">${scm}</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-GStringValue>
                            </entry>
                          </arguments>
                        </args>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                    </steps>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                </branches>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                <name>Gather Dynamic Values</name>
                <branches>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                    <name>default</name>
                    <steps>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                        <name>script</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map">
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>scriptBlock</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">def inv = readYaml file: &quot;${env.INVENTORY_FILE}&quot;
                    def hosts = []

                    // Iteracja po grupach (np. windows, linux) w sekcji children
                    inv.all.children.each { groupName, groupData -&gt;
                        if (groupData.containsKey(&quot;hosts&quot;)) {
                            hosts.addAll(groupData.hosts.keySet())
                        }
                    }

                    // Sprawdzamy, czy znaleziono jakiekolwiek hosty
                    if (hosts.isEmpty()) {
                        error &quot;No hosts found in the inventory file.&quot;
                    }

                    // Pobranie listy playbook√≥w
                    def playbooksShell = sh(
                        script: &quot;ls ${env.PLAYBOOKS_DIR}/*.yml | xargs -n1 basename&quot;,
                        returnStdout: true
                    ).trim()
                    def playbooks = playbooksShell.tokenize(&quot;\n&quot;)

                    // Wy≈õwietlenie wyboru hosta, playbooka i has≈Ça
                    def userSelection = input(
                        message: &quot;Select target host, playbook and provide SSH password:&quot;,
                        parameters: [
                            [
                                $class: &apos;ChoiceParameterDefinition&apos;,
                                choices: hosts.join(&quot;\n&quot;),
                                description: &apos;Choose the target host&apos;,
                                name: &apos;TARGET_HOST&apos;
                            ],
                            [
                                $class: &apos;ChoiceParameterDefinition&apos;,
                                choices: playbooks.join(&quot;\n&quot;),
                                description: &apos;Choose the playbook to run&apos;,
                                name: &apos;PLAYBOOK&apos;
                            ],
                            password(name: &apos;SSH_PASS&apos;, defaultValue: &apos;&apos;, description: &apos;Enter the SSH password for the target host&apos;)
                        ]
                    )

                    env.TARGET_HOST = userSelection.TARGET_HOST
                    env.PLAYBOOK    = userSelection.PLAYBOOK
                    env.SSH_PASS    = userSelection.SSH_PASS

                    echo &quot;Selected target host: ${env.TARGET_HOST}&quot;
                    echo &quot;Selected playbook: ${env.PLAYBOOK}&quot;</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                          </arguments>
                        </args>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                    </steps>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                </branches>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                <name>Trigger Deployment Pipeline</name>
                <branches>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                    <name>default</name>
                    <steps>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                        <name>script</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map">
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>scriptBlock</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">build job: &quot;CD&quot;,
                        parameters: [
                            string(name: &apos;TARGET_HOST&apos;, value: env.TARGET_HOST),
                            string(name: &apos;PLAYBOOK&apos;, value: env.PLAYBOOK),
                            password(name: &apos;SSH_PASS&apos;, value: env.SSH_PASS)
                        ]</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                          </arguments>
                        </args>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                    </steps>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                </branches>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
            </stages>
            <uuid>adda434c-3f06-4389-aa84-ffdfa8d52b56</uuid>
          </stages>
          <environment>
            <variables class="linked-hash-map">
              <entry>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                  <key>INVENTORY_FILE</key>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                  <value class="string">ansible/inventories/hosts.yml</value>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
              </entry>
              <entry>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                  <key>PLAYBOOKS_DIR</key>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                  <value class="string">ansible/playbooks</value>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
              </entry>
            </variables>
          </environment>
          <agent>
            <variables class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue$ConstantValue">
              <value class="string">slave</value>
            </variables>
            <agentType>
              <key>label</key>
            </agentType>
          </agent>
        </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTPipelineDef>
      </pipelineDefs>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.ExecutionModelAction>
    <com.cloudbees.plugins.credentials.builds.CredentialsParameterBinder plugin="credentials@1413.va_51c53703df1">
      <boundCredentials class="concurrent-hash-map"/>
    </com.cloudbees.plugins.credentials.builds.CredentialsParameterBinder>
    <hudson.plugins.git.util.BuildData plugin="git@5.7.0">
      <buildsByBranchName>
        <entry>
          <string>refs/remotes/origin/main</string>
          <hudson.plugins.git.util.Build>
            <marked plugin="git-client@6.1.3">
              <sha1>adf457f70aeb9f22cb7e8d8023725607bd9010f7</sha1>
              <branches class="list">
                <hudson.plugins.git.Branch>
                  <sha1 reference="../../../sha1"/>
                  <name>refs/remotes/origin/main</name>
                </hudson.plugins.git.Branch>
              </branches>
            </marked>
            <revision reference="../marked"/>
            <hudsonBuildNumber>56</hudsonBuildNumber>
          </hudson.plugins.git.util.Build>
        </entry>
      </buildsByBranchName>
      <lastBuild reference="../buildsByBranchName/entry/hudson.plugins.git.util.Build"/>
      <remoteUrls>
        <string>https://github.com/Kobeep/home_infra.git</string>
      </remoteUrls>
    </hudson.plugins.git.util.BuildData>
    <org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState plugin="workflow-scm-step@437.v05a_f66b_e5ef8">
      <revisionStates>
        <entry>
          <string>git https://github.com/Kobeep/home_infra.git</string>
          <hudson.scm.SCMRevisionState_-None/>
        </entry>
      </revisionStates>
    </org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState>
    <org.jenkinsci.plugins.workflow.cps.EnvActionImpl plugin="workflow-cps@4080.va_15b_44a_91525">
      <env class="tree-map">
        <entry>
          <string>PLAYBOOK</string>
          <string>fedora.yml</string>
        </entry>
        <entry>
          <string>SSH_PASS</string>
          <string>Kokoda1234</string>
        </entry>
        <entry>
          <string>TARGET_HOST</string>
          <string>szymonpc</string>
        </entry>
      </env>
    </org.jenkinsci.plugins.workflow.cps.EnvActionImpl>
    <org.jenkinsci.plugins.workflow.support.steps.input.InputAction plugin="pipeline-input-step@517.vf8e782ee645c">
      <ids class="java.util.concurrent.CopyOnWriteArrayList"/>
    </org.jenkinsci.plugins.workflow.support.steps.input.InputAction>
    <org.jenkinsci.plugins.workflow.support.steps.input.ApproverAction plugin="pipeline-input-step@517.vf8e782ee645c">
      <userId>kobeeq</userId>
    </org.jenkinsci.plugins.workflow.support.steps.input.ApproverAction>
    <org.jenkinsci.plugins.workflow.support.steps.build.DownstreamBuildAction plugin="pipeline-build-step@567.vea_ce550ece97">
      <downstreamBuilds>
        <org.jenkinsci.plugins.workflow.support.steps.build.DownstreamBuildAction_-DownstreamBuild>
          <flowNodeId>37</flowNodeId>
          <jobFullName>home_infra/CD</jobFullName>
          <buildNumber>47</buildNumber>
        </org.jenkinsci.plugins.workflow.support.steps.build.DownstreamBuildAction_-DownstreamBuild>
      </downstreamBuilds>
    </org.jenkinsci.plugins.workflow.support.steps.build.DownstreamBuildAction>
    <jenkins.metrics.impl.SubTaskTimeInQueueAction plugin="metrics@4.2.21-464.vc9fa_a_0d6265d">
      <queuingDurationMillis>5</queuingDurationMillis>
      <blockedDurationMillis>0</blockedDurationMillis>
      <buildableDurationMillis>4</buildableDurationMillis>
      <waitingDurationMillis>0</waitingDurationMillis>
      <executingDurationMillis>24187</executingDurationMillis>
      <workUnitCount>1</workUnitCount>
    </jenkins.metrics.impl.SubTaskTimeInQueueAction>
    <jenkins.model.InterruptedBuildAction>
      <causes>
        <org.jenkinsci.plugins.workflow.support.steps.build.DownstreamFailureCause plugin="pipeline-build-step@567.vea_ce550ece97">
          <id>home_infra/CD#47</id>
        </org.jenkinsci.plugins.workflow.support.steps.build.DownstreamFailureCause>
      </causes>
    </jenkins.model.InterruptedBuildAction>
  </actions>
  <queueId>193</queueId>
  <timestamp>1744543243216</timestamp>
  <startTime>1744543243227</startTime>
  <result>FAILURE</result>
  <duration>25305</duration>
  <charset>UTF-8</charset>
  <keepLog>false</keepLog>
  <execution class="org.jenkinsci.plugins.workflow.cps.CpsFlowExecution">
    <result>FAILURE</result>
    <script>pipeline {
    agent { label &apos;slave&apos; }

    environment {
        INVENTORY_FILE = &apos;ansible/inventories/hosts.yml&apos;
        PLAYBOOKS_DIR  = &apos;ansible/playbooks&apos;
    }

    stages {
        stage(&apos;Checkout Repository&apos;) {
            steps {
                echo &quot;üì• Checking out repository...&quot;
                checkout scm
            }
        }

        stage(&apos;Gather Dynamic Values&apos;) {
            steps {
                script {
                    // Wczytanie pliku YAML
                    def inv = readYaml file: &quot;${env.INVENTORY_FILE}&quot;
                    def hosts = []

                    // Iteracja po grupach (np. windows, linux) w sekcji children
                    inv.all.children.each { groupName, groupData -&gt;
                        if (groupData.containsKey(&quot;hosts&quot;)) {
                            hosts.addAll(groupData.hosts.keySet())
                        }
                    }

                    // Sprawdzamy, czy znaleziono jakiekolwiek hosty
                    if (hosts.isEmpty()) {
                        error &quot;No hosts found in the inventory file.&quot;
                    }

                    // Pobranie listy playbook√≥w
                    def playbooksShell = sh(
                        script: &quot;ls ${env.PLAYBOOKS_DIR}/*.yml | xargs -n1 basename&quot;,
                        returnStdout: true
                    ).trim()
                    def playbooks = playbooksShell.tokenize(&quot;\n&quot;)

                    // Wy≈õwietlenie wyboru hosta, playbooka i has≈Ça
                    def userSelection = input(
                        message: &quot;Select target host, playbook and provide SSH password:&quot;,
                        parameters: [
                            [
                                $class: &apos;ChoiceParameterDefinition&apos;,
                                choices: hosts.join(&quot;\n&quot;),
                                description: &apos;Choose the target host&apos;,
                                name: &apos;TARGET_HOST&apos;
                            ],
                            [
                                $class: &apos;ChoiceParameterDefinition&apos;,
                                choices: playbooks.join(&quot;\n&quot;),
                                description: &apos;Choose the playbook to run&apos;,
                                name: &apos;PLAYBOOK&apos;
                            ],
                            password(name: &apos;SSH_PASS&apos;, defaultValue: &apos;&apos;, description: &apos;Enter the SSH password for the target host&apos;)
                        ]
                    )

                    env.TARGET_HOST = userSelection.TARGET_HOST
                    env.PLAYBOOK    = userSelection.PLAYBOOK
                    env.SSH_PASS    = userSelection.SSH_PASS

                    echo &quot;Selected target host: ${env.TARGET_HOST}&quot;
                    echo &quot;Selected playbook: ${env.PLAYBOOK}&quot;
                }
            }
        }

        stage(&apos;Trigger Deployment Pipeline&apos;) {
            steps {
                script {
                    build job: &quot;CD&quot;,
                        parameters: [
                            string(name: &apos;TARGET_HOST&apos;, value: env.TARGET_HOST),
                            string(name: &apos;PLAYBOOK&apos;, value: env.PLAYBOOK),
                            password(name: &apos;SSH_PASS&apos;, value: env.SSH_PASS)
                        ]
                }
            }
        }
    }
}
</script>
    <loadedScripts class="linked-hash-map"/>
    <durabilityHint>MAX_SURVIVABILITY</durabilityHint>
    <timings class="map">
      <entry>
        <string>flowNode</string>
        <long>446506878</long>
      </entry>
      <entry>
        <string>classLoad</string>
        <long>634561351</long>
      </entry>
      <entry>
        <string>runQueue</string>
        <long>1401294304</long>
      </entry>
      <entry>
        <string>run</string>
        <long>1238459299</long>
      </entry>
      <entry>
        <string>parse</string>
        <long>230737643</long>
      </entry>
      <entry>
        <string>saveProgram</string>
        <long>309519708</long>
      </entry>
    </timings>
    <internalCalls class="sorted-set"/>
    <sandbox>true</sandbox>
    <iota>48</iota>
    <head>1:48</head>
    <done>true</done>
    <resumeBlocked>false</resumeBlocked>
    <storageDir>workflow-completed</storageDir>
  </execution>
  <completed>true</completed>
  <checkouts class="hudson.util.PersistedList">
    <org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
      <scm class="hudson.plugins.git.GitSCM" plugin="git@5.7.0">
        <configVersion>2</configVersion>
        <userRemoteConfigs>
          <hudson.plugins.git.UserRemoteConfig>
            <url>https://github.com/Kobeep/home_infra.git</url>
            <credentialsId>7a5fcd35-3a38-4511-a275-881c11e6625d</credentialsId>
          </hudson.plugins.git.UserRemoteConfig>
        </userRemoteConfigs>
        <branches>
          <hudson.plugins.git.BranchSpec>
            <name>*/main</name>
          </hudson.plugins.git.BranchSpec>
        </branches>
        <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
        <submoduleCfg class="empty-list"/>
        <extensions/>
      </scm>
      <node>slave</node>
      <workspace>/var/jenkins_home/workspace/home_infra/generate_deployment_pipeline</workspace>
      <changelogFile>/var/jenkins_home/jobs/home_infra/jobs/generate_deployment_pipeline/builds/56/changelog13293977266749036629.xml</changelogFile>
      <pollingBaseline class="hudson.scm.SCMRevisionState$None" reference="../../../actions/org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState/revisionStates/entry/hudson.scm.SCMRevisionState_-None"/>
    </org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
    <org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
      <scm class="hudson.plugins.git.GitSCM" reference="../../org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout/scm"/>
      <node>slave</node>
      <workspace>/var/jenkins_home/workspace/home_infra/generate_deployment_pipeline</workspace>
      <pollingBaseline class="hudson.scm.SCMRevisionState$None" reference="../../../actions/org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState/revisionStates/entry/hudson.scm.SCMRevisionState_-None"/>
    </org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
  </checkouts>
</flow-build>