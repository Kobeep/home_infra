pipeline {
  agent { label 'slave' }

  environment {
    INVENTORY_FILE    = 'ansible/inventories/hosts.yml'
    HOST_NAME         = 'server'
    SSH_BASE          = '/var/jenkins_home/.ssh'
    REMOTE_KUBECONFIG = '/etc/rancher/k3s/k3s.yaml'
    HASS_LOCAL        = 'hass-config'
    DASHY_LOCAL       = 'dashy-config'
    GRAFANA_LOCAL     = 'grafana-config'
  }

  stages {
    stage('Checkout') {
      steps { checkout scm }
    }

    stage('Parse Inventory') {
      steps {
        script {
          def inv = readYaml file: INVENTORY_FILE
          def hostEntry = inv.all.children.values()
                             .find { it.hosts?.containsKey(HOST_NAME) }
                             ?.hosts[HOST_NAME]
          if (!hostEntry) error "Host '${HOST_NAME}' not found"
          env.REMOTE_HOST = hostEntry.ansible_host
          env.REMOTE_USER = hostEntry.ansible_user
          echo "➡ Target: ${env.REMOTE_USER}@${env.REMOTE_HOST}"
        }
      }
    }

    stage('Backup via Script') {
      steps {
        sh 'chmod +x jf/scripts/backup_configs.sh'
        sh './jf/scripts/backup_configs.sh'
      }
    }

    stage('Commit & Push') {
      steps {
        withCredentials([usernamePassword(
          credentialsId: '7a5fcd35-3a38-4511-a275-881c11e6625d',
          usernameVariable: 'GIT_USER',
          passwordVariable: 'GIT_PASS'
        )]) {
          sh """
            # ustawiamy autora tylko w tym repo
            git config user.email "jenkins@localhost"
            git config user.name  "Jenkins CI"

            # wstrzykujemy poświadczenia do URL-a
            ORIG_URL=\$(git remote get-url origin)
            AUTH_URL=\${ORIG_URL/https:\\/\\//https:\\/\\/\$GIT_USER:\$GIT_PASS@}

            git remote set-url origin \$AUTH_URL

            git add ${HASS_LOCAL} ${DASHY_LOCAL} ${GRAFANA_LOCAL}

            if git diff --cached --quiet; then
              echo "✅ No changes to commit."
            else
              git commit -m "Backup ${HOST_NAME}: \$(date -u +'%Y-%m-%d %H:%M:%S UTC')"
              git push origin HEAD:main
            fi
          """
        }
      }
    }

  }

  post {
    success { echo "✅ Done." }
    failure { echo "❌ Failed, check logs." }
  }
}
